name: _deploy

on:
  workflow_call:
    inputs:
      app-name:
        type: string
        required: true
      docker-name:
        type: string
        required: true

env:
  DOCKER_IMAGE: ghcr.io/mkizka/${{ inputs.docker-name }}
  CAPROVER_URL: paas.mkizka.dev
  APP_DOMAIN: ${{ inputs.app-name }}.mkizka.dev

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: mkizka
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/setup-buildx-action@v2
      - uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ env.DOCKER_IMAGE }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: create-new-app
        continue-on-error: true
        run: |
          npx caprover api \
            -m POST \
            -t /user/apps/appDefinitions/register \
            -d '{"appName":"${{ inputs.app-name }}","hasPersistentData":false}' \
            -u ${{ env.CAPROVER_URL }} \
            -p ${{ secrets.CAPROVER_PASSWORD }}
      - name: set-custom-domain
        continue-on-error: true
        run: |
          npx caprover api \
            -m POST \
            -t /user/apps/appDefinitions/customdomain \
            -d '{"appName":"${{ inputs.app-name }}","customDomain":"${{ env.APP_DOMAIN }}"}' \
            -u ${{ env.CAPROVER_URL }} \
            -p ${{ secrets.CAPROVER_PASSWORD }}
      - name: update-config
        run: |
          envVars=$(jq -cn \
            --arg DATABASE_URL "${{ secrets.DATABASE_URL }}/${{ inputs.app-name }}" \
            --arg NEXTAUTH_SECRET "${{ secrets.NEXTAUTH_SECRET }}" \
            --arg NEXTAUTH_URL https://${{ env.APP_DOMAIN }} \
            --arg EMAIL_SERVER_USER "${{ secrets.EMAIL_SERVER_USER }}" \
            --arg EMAIL_SERVER_PASS "${{ secrets.EMAIL_SERVER_PASS }}" \
            --arg EMAIL_SERVER_HOST srv-captain--mail \
            --arg EMAIL_SERVER_PORT 1025 \
            --arg EMAIL_FROM mail@test.mkizka.dev \
            '$ARGS.named | to_entries')
          data=$(jq -cn \
            --arg appName ${{ inputs.app-name }} \
            --arg instanceCount 1 \
            --arg containerHttpPort 3000 \
            --argjson envVars "$envVars" \
            '$ARGS.named')
          npx caprover api \
            -m POST \
            -t /user/apps/appDefinitions/update \
            -d "$data" \
            -u ${{ env.CAPROVER_URL }} \
            -p ${{ secrets.CAPROVER_PASSWORD }}
      - name: deploy-app
        run: |
          npx caprover deploy \
            -a ${{ inputs.app-name }} \
            -i ${{ env.DOCKER_IMAGE }} \
            -u ${{ env.CAPROVER_URL }} \
            -p ${{ secrets.CAPROVER_PASSWORD }}
      - uses: thollander/actions-comment-pull-request@v2
        if: ${{ github.event_name == 'pull_request' }}
        with:
          message: |
            確認環境が作成されました

            :rocket: https://${{ env.APP_DOMAIN }}
          comment_tag: deploy-pr-link
