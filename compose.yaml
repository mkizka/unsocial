version: "3"

volumes:
  postgres_data:
  mysql_data:
  redis_data:
  mail_data:
  next:
  node_modules:

services:
  web:
    build:
      context: ./apps/web
      dockerfile: ./Dockerfile.local
    volumes:
      - ./apps/web:/app
      - ./docker/mkcert:/mkcert
      - next:/app/.next
      - node_modules:/app/node_modules
    ports:
      - 3000:3000
    env_file: .env.docker
    environment:
      - NODE_EXTRA_CA_CERTS=/mkcert/rootCA.pem
    healthcheck:
      test: ["CMD-SHELL", "node -e 'fetch(`http://localhost:3000/health`)'"]
      interval: 2s
      timeout: 2s
      retries: 30
    depends_on:
      mysql:
        condition: service_healthy
  misskey:
    image: misskey/misskey:13.12
    volumes:
      - ./docker/misskey/files:/misskey/files
      - ./docker/misskey/.config:/misskey/.config:ro
      - ./docker/mkcert:/mkcert
    ports:
      - 3001:3001
    environment:
      - NODE_ENV=development
      - NODE_EXTRA_CA_CERTS=/mkcert/rootCA.pem
    healthcheck:
      test: ["CMD-SHELL", "node -e 'fetch(`http://localhost:3001`)'"]
      interval: 2s
      timeout: 2s
      retries: 30
    depends_on:
      postgres:
        condition: service_healthy
  nginx:
    image: nginx:1-alpine
    volumes:
      - ./docker/nginx:/etc/nginx/conf.d
    ports:
      - 80:80
      - 443:443
    networks:
      default:
        aliases:
          - soshal.localhost
          - misskey.localhost
    depends_on:
      web:
        condition: service_healthy
      misskey:
        condition: service_healthy
  postgres:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=misskey
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 2s
      retries: 5
  mysql:
    image: mysql:8
    ports:
      - 3306:3306
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=password
    healthcheck:
      test: ["CMD", "mysql", "-uroot", "-ppassword", "-e", "SELECT 1"]
      interval: 2s
      timeout: 2s
      retries: 10
  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
  mail:
    image: mailhog/mailhog:v1.0.1
    ports:
      - 1025:1025
      - 8025:8025
