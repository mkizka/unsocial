// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Example {
  id        String   @id @default(nanoid(8))
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Session {
  id           String   @id @default(nanoid(8))
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                String    @id @default(nanoid(8))
  preferredUsername String
  host              String
  name              String?
  email             String?   @unique
  emailVerified     DateTime?
  icon              String?
  image             String?
  publicKey         String?
  privateKey        String?
  actorUrl          String?
  inboxUrl          String?
  sessions          Session[]
  notes             Note[]
  followee          Follow[]  @relation("followee")
  follower          Follow[]  @relation("follower")

  @@unique([preferredUsername, host])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Note {
  id        String   @id @default(nanoid(8))
  url       String? // TODO: objectUrlに変える
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  content   String
  published DateTime
  createdAt DateTime @default(now())
}

enum FollowStatus {
  SENT
  RECEIVED
  ACCEPTED
}

model Follow {
  id         String       @id @default(nanoid(8))
  status     FollowStatus @default(SENT)
  followeeId String
  followee   User         @relation("followee", fields: [followeeId], references: [id], onDelete: Cascade)
  followerId String
  follower   User         @relation("follower", fields: [followerId], references: [id], onDelete: Cascade)
  createdAt  DateTime     @default(now())

  @@unique([followeeId, followerId])
}
